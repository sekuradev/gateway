name: push
on:
  push:
    branches:
      - main
env:
  BUF_TOKEN: ${{ secrets.BUF_TOKEN }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
      - name: Lint schema
        uses: bufbuild/buf-lint-action@v1
        with:
          input: .

  check-breaking:
    name: Detect breaking gRPC changes
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_disabled'
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1
      - uses: bufbuild/buf-breaking-action@v1
        with:
          # The 'main' branch of the GitHub repository that defines the module.
          against: "https://github.com/${GITHUB_REPOSITORY}.git#branch=main"
  generate-gateway:
    name: Generate gateway
    runs-on: ubuntu-latest
    needs: lint
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version-file: gateway/go.mod
      - name: Install protoc and other deps
        run: sudo apt-get install -y protobuf-compiler unzip wget
      - name: Install protoc-gen-grpc-gateway
        run: |
          wget https://github.com/grpc-ecosystem/grpc-gateway/releases/download/v2.14.0/protoc-gen-grpc-gateway-v2.14.0-linux-x86_64 -O /usr/local/bin/protoc-gen-grpc-gateway
          chmod 755 /usr/local/bin/protoc-gen-grpc-gateway
      - name: Install protoc-gen-openapiv2
        run: |
          wget https://github.com/grpc-ecosystem/grpc-gateway/releases/download/v2.14.0/protoc-gen-openapiv2-v2.14.0-linux-x86_64 -O /usr/local/bin/protoc-gen-openapiv2
          chmod 755 /usr/local/bin/protoc-gen-openapiv2
      - name: Install buf
        run: |
          wget https://github.com/bufbuild/buf/releases/download/v1.9.0/buf-Linux-x86_64 -O /usr/local/bin/buf
          chmod 755 /usr/local/bin/buf

      - name: Generate
        run: buf generate

      - name: Generate Documentation HTML
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: html
          openapi-file: gen/openapiv2/sekuraapi/v1/sekura.swagger.yaml

      - name: Generate Documentation HTML2
        uses: openapi-generators/openapitools-generator-action@v1
        with:
          generator: html2
          openapi-file: gen/openapiv2/sekuraapi/v1/sekura.swagger.yaml

      - name: Prepare pages
        run: |
          mkdir pages
          cp -r html-client pages/html
          cp -r html2-client pages/html2
          cp templates/mainpage/index.html pages
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v2
      - name: Upload documentation
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./pages

  deploy-pages:
    name: Deploy github-pages
    runs-on: ubuntu-latest
    needs: generate-gateway
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deploy-pages.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
